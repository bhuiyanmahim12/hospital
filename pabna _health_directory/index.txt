digital health directory -a web based hospital information system for pabna
1. Objectives
To develop a digital platform that provides structured information about hospitals and health services.
To understand the integration of HTML, CSS, JavaScript, and PHP in building dynamic web applications.
To implement responsive design techniques to ensure accessibility across devices.
To practice client-server interaction and basic data handling using JSON and PHP.
To enhance problem-solving skills in web development and create user-friendly interfaces.

Theory
The Digital Health Directory is a web-based application designed to provide 
structured information about hospitals and health services in a specific region. 
The development of such a system involves four core web technologies:
 HTML, CSS, JavaScript, and PHP, each serving a distinct purpose.
1. HTML (HyperText Markup Language)
HTML forms the structural backbone of the web application.
 It defines elements such as headings, paragraphs, links, forms, and sections, 
 enabling the organization of content.
2. CSS (Cascading Style Sheets)
CSS controls the visual presentation of the HTML content. It sets colors,
 fonts, spacing, borders, and layout using techniques like Flexbox and Grid.
  
3. JavaScript (JS)
JavaScript is a client-side scripting language used to add dynamic behavior
 and interactivity. 
4. PHP (Hypertext Preprocessor)
PHP is a server-side scripting language that manages dynamic content
 and server interactions. It is used to display the current date,
  process form submissions securely, and handle backend logic.

1. HTML (HyperText Markup Language)
HTML is the core markup language used to define the structure and content of web pages.
 
Usage in my project:
Headers & Footers: <header> and <footer> tags define the top and bottom
 sections of the page, displaying the site title, date, and copyright.
Navigation: <nav> contains links to different pages (Home, Hospitals, Contact) to
 allow user navigation.
Main Content: <main> holds the primary content of the page, including the 
welcome message, hospital list, or hospital details.
Forms: <form> in contact.html allows users to submit messages. 
Input elements like <input> and <textarea> collect data. 

2. CSS (Cascading Style Sheets)
CSS is used to style HTML elements and enhance the visual appearance
 of the webpage.
Usage in my project:
Page Styling: The body has a light indigo background (#e8eaf6) and dark
 indigo text (#1a237e) to ensure readability.
Headers & Navigation: header and nav have indigo shades to create a
 professional look. Hover effects on links improve user interactivity.
Cards & Buttons: .card elements present hospital information in an organized, 
visually appealing container. Buttons .btn and .back-btn provide clickable actions.
Responsive Design: iframe width is set to 100%, allowing hospital 
websites to be displayed on any screen size.  

3. JavaScript (JS)
JavaScript is a client-side scripting language that adds interactivity 
and dynamic behavior to web pages.
Usage in my project:
Real-Time Clock: time.js updates the current time every second
 using setInterval().
Dynamic Hospital List: JavaScript creates hospital cards dynamically 
from an array of objects. Users can click “Visit Website” buttons to open 
the hospital page inside an iframe.
DOM Manipulation: document.getElementById() and innerHTML are used
 to update content dynamically.
Event Handling: The onclick event is used to show or hide the hospital
 list and iframe view.

PHP (Hypertext Preprocessor)
PHP is a server-side scripting language used to process data 
and generate dynamic web content.
Usage in my project:
Display Current Date: PHP generates the current date in index.
php using date("d M Y").
Form Submission: In contact.php, PHP handles POST requests from the
 contact form, sanitizes input with htmlspecialchars(), and 
 outputs a thank-you message.
Server-Side Rendering: PHP integrates dynamic content seamlessly into HTML.